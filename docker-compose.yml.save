version: '3'
services:
  mecanicosapp:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - db
    environment:
      - RABBIT_USER=guest
      - RABBIT_PASSWORD=guest
      - RABBITMQ_HOST=rabbitmq
      - FLASK_ENV=production
      - FLASK_APP=run.py
      - GUNICORN_WORKERS=4
      - GUNICORN_THREADS=2
      - MYSQL_HOST=db
      - MYSQL_USER=mecanicos_user
      - MYSQL_PASSWORD=mecanicos_password
      - MYSQL_DATABASE=mecanicos     
    command: gunicorn -w 4 -b 0.0.0.0:5000 run:app
    expose:
      - "5000"
    networks:
      - mecanicos_network
    env_file:
      - src/.env
    volumes:
      - .:/app
      - /app/node_modules
      - /app/mecanicos
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=mecanicos
      - MYSQL_USER=mecanicos_user
      - MYSQL_PASSWORD=mecanicos_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mecanicos_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "mecanicos_user", "-pmecanicos_password"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    expose:
      - "5672"
      - "15672"
    networks:
      - mecanicos_network
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - mecanicosapp
      - rabbitmq
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./web/static:/app/web/static
      - /etc/letsencrypt:/etc/letsencrypt  # Para los certificados SSL
    networks:
      - mecanicos_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  certbot:
    image: certbot/certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - ./web/static:/app/web/static
    entrypoint: >
      sh -c '
      certbot certonly --webroot -w /app/web/static
      --email tuemail@ejemplo.com --agree-tos --no-eff-email
      -d tudominio.com || true
      '
    networks:
      - mecanicos_network

networks:
  mecanicos_network:
    driver: bridge

volumes:
  mysql_data:
